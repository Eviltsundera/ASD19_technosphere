#include <iostream>
#include <string>
using namespace std;

bool equal(string a, string b)
{
    int al = a.length(), bl = b.length(), l;
    if (a[0] == '-') a[0] = '0';
    if (b[0] == '-') b[0] = '0';
    if (al > bl)
    {
        for(int i = 0; i < al - bl; i++) b = '0' + b;
    }
    else
    {
        for(int i = 0; i < bl - al; i++) a = '0' + a;
    }
    if (a >= b) return true;
    else return false;
}

void sub(string a, string b)
{
    int l, al, bl;
    al = a.length();
    bl = b.length();
    if (al > bl) l = al;
    else l = bl;

    //cout << al << " " << bl << " " << l << " " << l + 1 << endl;

    int *aa = new int[l];
    int *bb = new int[l];
    int *cc = new int[l+1];
    for(int i = l; i > -1; i--)
    {
        if (al - (l - i) < 0) aa[i] = 0;
        else
        {
            if (a[al - (l - i)] == '-') aa[0] = 0;
            else aa[i] = (int)a[al - (l - i)] - 48;
        }
        if (bl - (l - i) < 0) bb[i] = 0;
        else
        {
            if (b[bl - (l - i)] == '-') bb[0] = 0;
            else bb[i] = (int)b[bl - (l - i)] - 48;
        }
    }
    //for(int i = 0; i < l; i++) cout << aa[i] << " " << bb[i] << endl;

    int v = 0;
    for(int i = l - 1; i > -1; i--)
    {
        //cout << i << endl;
        if  (aa[i] - bb[i] + v < 0)
        {
            cc[i + 1] = 10 + aa[i] - bb[i] + v;
            v = -1;
        }
        else
        {
            cc[i + 1] = aa[i] - bb[i] + v;
            v = 0;
        }
    }
    cc[0] = v;
    bool h = true;
    for(int i = 0; i < l + 1; i++)
    {
        if (cc[i] == 0 && h) h = true;
        else { h = false; cout << cc[i]; }
    }
    if (h == true) cout << 0;
}



void add(string a, string b)
{
    int l, al, bl;
    al = a.length();
    bl = b.length();
    if (al > bl) l = al;
    else l = bl;

    //cout << al << " " << bl << " " << l << " " << l + 1 << endl;

    int *aa = new int[l];
    int *bb = new int[l];
    int *cc = new int[l+1];
    for(int i = l; i > -1; i--)
    {
        if (al - (l - i) < 0) aa[i] = 0;
        else
        {
            if (a[al - (l - i)] == '-') aa[0] = 0;
            else aa[i] = (int)a[al - (l - i)] - 48;
        }
        if (bl - (l - i) < 0) bb[i] = 0;
        else
        {
            if (b[bl - (l - i)] == '-') bb[0] = 0;
            else bb[i] = (int)b[bl - (l - i)] - 48;
        }
    }
    //for(int i = 0; i < l; i++) cout << aa[i] << " " << bb[i] << endl;

    int v = 0;
    for(int i = l - 1; i > -1; i--)
    {
        cc[i + 1] = (aa[i] + bb[i] + v) % 10;
        v = (aa[i] + bb[i] + v) / 10;
    }
    cc[0] = v;
    bool h = true;
    for(int i = 0; i < l + 1; i++)
    {
        if (cc[i] == 0 && h) h = true;
        else { h = false; cout << cc[i]; }
    }
    if (h == true) cout << 0;
}

void func(string a, string q, string b)
{
    int sa = 1, sb = 1, sign;
    bool eq;
    if (q == "+") sign = 1;
    if (q == "-") sign = -1;
    if (a[0] == '-') { sa = -1; a[0] = '0'; }
    if (b[0] == '-') { sb = -1; b[0] = '0'; }

    eq = equal(a, b);
    if (sa == -1 && sign * sb == 1) {
        //cout << a << " " << b << endl;
        if (eq) {
            if (a == '0' + b || a == b) cout << 0;
            else { cout << "-"; sub(a, b); }
        }
        else sub(b, a);
    }
    if (sa == -1 && sign * sb == -1) { cout << "-"; add(a, b); }
    if (sa == 1 && sign * sb == 1) add(a, b);
    if (sa == 1 && sign * sb == -1) {
        if (eq) sub(a, b);
        else { cout << "-"; sub(b, a); }
    }
}





int main() {
    string a, b, c, q;
    getline(cin, a);
    getline(cin, q);
    getline(cin, b);

    func(a, q, b);

    return 0;
}
